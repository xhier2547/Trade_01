{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wator\\\\Documents\\\\Ananto\\\\trade\\\\frontend\\\\src\\\\components\\\\TradingChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, TimeScale, Title, Tooltip, Legend } from \"chart.js\";\nimport \"chartjs-adapter-date-fns\";\nimport { Chart } from \"react-chartjs-2\";\nimport { CandlestickController, CandlestickElement } from \"chartjs-chart-financial\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, TimeScale, CandlestickController, CandlestickElement, Title, Tooltip, Legend);\nconst TradingChart = () => {\n  _s();\n  const [candles, setCandles] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(\"https://api.binance.com/api/v3/klines?symbol=GBPUSDT&interval=1m&limit=20\");\n        const data = await res.json();\n        const candlesData = data.map(entry => {\n          const timestamp = parseInt(entry[0]); // ✅ แปลงให้แน่ใจว่าเป็นตัวเลข\n          return {\n            x: new Date(timestamp),\n            // ✅ ใช้ Date object ที่ถูกต้อง\n            o: parseFloat(entry[1]),\n            h: parseFloat(entry[2]),\n            l: parseFloat(entry[3]),\n            c: parseFloat(entry[4])\n          };\n        });\n        setCandles(candlesData);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 60000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#000\",\n      padding: \"10px\",\n      color: \"#0f0\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"GBP/USD 1-Min Candlestick Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"candlestick\",\n      data: {\n        datasets: [{\n          label: \"GBP/USD Price\",\n          data: candles,\n          borderColor: \"#fff\",\n          borderWidth: 1,\n          color: {\n            up: \"#0f0\",\n            // ✅ สีเขียวแท่งขึ้น\n            down: \"#f00\",\n            // ✅ สีแดงแท่งลง\n            unchanged: \"#999\"\n          }\n        }]\n      },\n      options: {\n        scales: {\n          x: {\n            type: \"time\",\n            time: {\n              unit: \"minute\",\n              tooltipFormat: \"yyyy-MM-dd HH:mm:ss\"\n            },\n            ticks: {\n              color: \"#fff\"\n            }\n          },\n          y: {\n            ticks: {\n              color: \"#fff\"\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            labels: {\n              color: \"#fff\"\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(TradingChart, \"TF9lc5Mu+ZlB8TX+wxZGjKbTMJI=\");\n_c = TradingChart;\nexport default TradingChart;\nvar _c;\n$RefreshReg$(_c, \"TradingChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","TimeScale","Title","Tooltip","Legend","CandlestickController","CandlestickElement","jsxDEV","_jsxDEV","register","TradingChart","_s","candles","setCandles","fetchData","res","fetch","data","json","candlesData","map","entry","timestamp","parseInt","x","Date","o","parseFloat","h","l","c","error","console","interval","setInterval","clearInterval","style","backgroundColor","padding","color","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","type","datasets","label","borderColor","borderWidth","up","down","unchanged","options","scales","time","unit","tooltipFormat","ticks","y","plugins","legend","labels","_c","$RefreshReg$"],"sources":["C:/Users/wator/Documents/Ananto/trade/frontend/src/components/TradingChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  TimeScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from \"chart.js\";\r\nimport \"chartjs-adapter-date-fns\"; \r\nimport { Chart } from \"react-chartjs-2\";\r\nimport { CandlestickController, CandlestickElement } from \"chartjs-chart-financial\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, TimeScale, CandlestickController, CandlestickElement, Title, Tooltip, Legend);\r\n\r\nconst TradingChart = () => {\r\n  const [candles, setCandles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await fetch(\"https://api.binance.com/api/v3/klines?symbol=GBPUSDT&interval=1m&limit=20\");\r\n        const data = await res.json();\r\n\r\n        const candlesData = data.map(entry => {\r\n          const timestamp = parseInt(entry[0]); // ✅ แปลงให้แน่ใจว่าเป็นตัวเลข\r\n          return {\r\n            x: new Date(timestamp), // ✅ ใช้ Date object ที่ถูกต้อง\r\n            o: parseFloat(entry[1]),\r\n            h: parseFloat(entry[2]),\r\n            l: parseFloat(entry[3]),\r\n            c: parseFloat(entry[4]),\r\n          };\r\n        });\r\n\r\n        setCandles(candlesData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 60000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#000\", padding: \"10px\", color: \"#0f0\", textAlign: \"center\" }}>\r\n      <h2>GBP/USD 1-Min Candlestick Chart</h2>\r\n      <Chart\r\n        type=\"candlestick\"\r\n        data={{\r\n          datasets: [\r\n            {\r\n              label: \"GBP/USD Price\",\r\n              data: candles,\r\n              borderColor: \"#fff\",\r\n              borderWidth: 1,\r\n              color: {\r\n                up: \"#0f0\", // ✅ สีเขียวแท่งขึ้น\r\n                down: \"#f00\", // ✅ สีแดงแท่งลง\r\n                unchanged: \"#999\"\r\n              }\r\n            }\r\n          ],\r\n        }}\r\n        options={{\r\n          scales: {\r\n            x: {\r\n              type: \"time\",\r\n              time: {\r\n                unit: \"minute\",\r\n                tooltipFormat: \"yyyy-MM-dd HH:mm:ss\",\r\n              },\r\n              ticks: { color: \"#fff\" },\r\n            },\r\n            y: {\r\n              ticks: { color: \"#fff\" },\r\n            }\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              labels: { color: \"#fff\" }\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TradingChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}