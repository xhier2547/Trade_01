{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wator\\\\Documents\\\\Ananto\\\\trade\\\\frontend\\\\src\\\\components\\\\TradingChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, CandlestickController, CandlestickElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Chart } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, CandlestickController, CandlestickElement, Title, Tooltip, Legend);\nconst TradingChart = () => {\n  _s();\n  const [candles, setCandles] = useState([]);\n  const [timestamps, setTimestamps] = useState([]);\n  const [signals, setSignals] = useState([]);\n  const [timer, setTimer] = useState(60); // ตั้งเวลา 60 วินาทีต่อรอบ\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // ดึงข้อมูลแท่งเทียนจาก Binance API\n        const res = await fetch(\"https://api.binance.com/api/v3/klines?symbol=EURJPY&interval=1m&limit=10\");\n        const data = await res.json();\n        const candlesData = data.map(entry => ({\n          t: new Date(entry[0]).toLocaleTimeString(),\n          o: parseFloat(entry[1]),\n          // Open\n          h: parseFloat(entry[2]),\n          // High\n          l: parseFloat(entry[3]),\n          // Low\n          c: parseFloat(entry[4]) // Close\n        }));\n        setCandles(candlesData);\n        setTimestamps(candlesData.map(c => c.t));\n\n        // ดึงสัญญาณซื้อ/ขายจาก AI\n        const signalRes = await fetch(\"http://127.0.0.1:8000/signal/EURJPY\");\n        const signalData = await signalRes.json();\n        setSignals(signalData.signals);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 60000); // ดึงข้อมูลทุก 1 นาที\n    return () => clearInterval(interval);\n  }, []);\n\n  // Countdown Timer\n  useEffect(() => {\n    if (timer > 0) {\n      const interval = setInterval(() => setTimer(timer - 1), 1000);\n      return () => clearInterval(interval);\n    }\n  }, [timer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"EUR/JPY Binary Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\u23F3 \\u0E40\\u0E27\\u0E25\\u0E32\\u0E40\\u0E2B\\u0E25\\u0E37\\u0E2D: \", timer, \" \\u0E27\\u0E34\\u0E19\\u0E32\\u0E17\\u0E35\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"candlestick\",\n      data: {\n        labels: timestamps,\n        datasets: [{\n          label: \"EUR/JPY\",\n          data: candles.map(c => ({\n            x: c.t,\n            o: c.o,\n            h: c.h,\n            l: c.l,\n            c: c.c\n          })),\n          borderColor: \"blue\",\n          borderWidth: 2\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: signals.map((signal, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert(`You clicked ${signal}!`),\n        style: {\n          margin: \"5px\",\n          padding: \"10px\",\n          fontSize: \"20px\",\n          backgroundColor: signal === \"BUY\" ? \"green\" : \"red\",\n          color: \"white\",\n          border: \"none\",\n          cursor: \"pointer\"\n        },\n        children: signal === \"BUY\" ? \"⬆️ BUY\" : \"⬇️ SELL\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(TradingChart, \"KV+ZPFYKQOCpxlWr/NlfMDl63bU=\");\n_c = TradingChart;\nexport default TradingChart;\nvar _c;\n$RefreshReg$(_c, \"TradingChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","CandlestickController","CandlestickElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","TradingChart","_s","candles","setCandles","timestamps","setTimestamps","signals","setSignals","timer","setTimer","fetchData","res","fetch","data","json","candlesData","map","entry","t","Date","toLocaleTimeString","o","parseFloat","h","l","c","signalRes","signalData","error","console","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","type","labels","datasets","label","x","borderColor","borderWidth","style","marginTop","signal","index","onClick","alert","margin","padding","fontSize","backgroundColor","color","border","cursor","_c","$RefreshReg$"],"sources":["C:/Users/wator/Documents/Ananto/trade/frontend/src/components/TradingChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, CandlestickController, CandlestickElement, Title, Tooltip, Legend } from \"chart.js\";\r\nimport { Chart } from \"react-chartjs-2\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, CandlestickController, CandlestickElement, Title, Tooltip, Legend);\r\n\r\nconst TradingChart = () => {\r\n  const [candles, setCandles] = useState([]);\r\n  const [timestamps, setTimestamps] = useState([]);\r\n  const [signals, setSignals] = useState([]);\r\n  const [timer, setTimer] = useState(60); // ตั้งเวลา 60 วินาทีต่อรอบ\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // ดึงข้อมูลแท่งเทียนจาก Binance API\r\n        const res = await fetch(\"https://api.binance.com/api/v3/klines?symbol=EURJPY&interval=1m&limit=10\");\r\n        const data = await res.json();\r\n\r\n        const candlesData = data.map(entry => ({\r\n          t: new Date(entry[0]).toLocaleTimeString(),\r\n          o: parseFloat(entry[1]), // Open\r\n          h: parseFloat(entry[2]), // High\r\n          l: parseFloat(entry[3]), // Low\r\n          c: parseFloat(entry[4]), // Close\r\n        }));\r\n\r\n        setCandles(candlesData);\r\n        setTimestamps(candlesData.map(c => c.t));\r\n\r\n        // ดึงสัญญาณซื้อ/ขายจาก AI\r\n        const signalRes = await fetch(\"http://127.0.0.1:8000/signal/EURJPY\");\r\n        const signalData = await signalRes.json();\r\n        setSignals(signalData.signals);\r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 60000); // ดึงข้อมูลทุก 1 นาที\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Countdown Timer\r\n  useEffect(() => {\r\n    if (timer > 0) {\r\n      const interval = setInterval(() => setTimer(timer - 1), 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [timer]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>EUR/JPY Binary Options</h2>\r\n      <h3>⏳ เวลาเหลือ: {timer} วินาที</h3>\r\n      <Chart\r\n        type=\"candlestick\"\r\n        data={{\r\n          labels: timestamps,\r\n          datasets: [\r\n            {\r\n              label: \"EUR/JPY\",\r\n              data: candles.map(c => ({ x: c.t, o: c.o, h: c.h, l: c.l, c: c.c })),\r\n              borderColor: \"blue\",\r\n              borderWidth: 2,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        {signals.map((signal, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => alert(`You clicked ${signal}!`)}\r\n            style={{\r\n              margin: \"5px\",\r\n              padding: \"10px\",\r\n              fontSize: \"20px\",\r\n              backgroundColor: signal === \"BUY\" ? \"green\" : \"red\",\r\n              color: \"white\",\r\n              border: \"none\",\r\n              cursor: \"pointer\"\r\n            }}\r\n          >\r\n            {signal === \"BUY\" ? \"⬆️ BUY\" : \"⬇️ SELL\"}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TradingChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}