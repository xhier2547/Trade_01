{"ast":null,"code":"class IQOptionAPI {\n  constructor(token) {\n    this.token = token;\n    this.ws = null;\n    this.isConnected = false;\n    this.candles = [];\n  }\n  connect() {\n    return new Promise((resolve, reject) => {\n      this.ws = new WebSocket(\"wss://iqoption.com/echo/websocket\");\n      this.ws.onopen = () => {\n        console.log(\"✅ Connected to IQ Option WebSocket\");\n        this.isConnected = true;\n        this.authenticate();\n        this.keepAlive();\n        this.checkMarketStatus(); // ✅ ตรวจสอบว่าตลาดเปิดหรือปิด\n        resolve();\n      };\n      this.ws.onmessage = message => {\n        const data = JSON.parse(message.data);\n        if (data.name === \"candles\") {\n          this.candles = data.msg.candles;\n        }\n      };\n      this.ws.onerror = error => {\n        console.error(\"❌ WebSocket Error:\", error);\n        reject(error);\n      };\n      this.ws.onclose = () => {\n        console.log(\"🔌 Disconnected from IQ Option WebSocket\");\n        this.isConnected = false;\n        setTimeout(() => this.reconnect(), 5000);\n      };\n    });\n  }\n  authenticate() {\n    const authData = {\n      name: \"authenticate\",\n      msg: {\n        token: this.token\n      }\n    };\n    this.ws.send(JSON.stringify(authData));\n  }\n  subscribeCandles(asset, interval) {\n    const subscribeData = {\n      name: \"subscribeMessage\",\n      msg: {\n        name: \"candles\",\n        version: \"1.0\",\n        params: {\n          routingFilters: {\n            active_id: asset,\n            size: interval,\n            only_closed: false\n          }\n        }\n      }\n    };\n    this.ws.send(JSON.stringify(subscribeData));\n  }\n  checkMarketStatus() {\n    const marketStatusData = {\n      name: \"get-instruments\",\n      msg: {\n        type: \"forex\",\n        instrument_type: \"currency\"\n      }\n    };\n    this.ws.send(JSON.stringify(marketStatusData));\n    this.ws.onmessage = message => {\n      const data = JSON.parse(message.data);\n      if (data.name === \"get-instruments\") {\n        console.log(\"📢 Market Status:\", data.msg);\n        if (data.msg.length === 0) {\n          console.warn(\"⚠️ ตลาดปิดอยู่ในขณะนี้!\");\n        }\n      }\n    };\n  }\n  getCandles() {\n    return this.candles;\n  }\n  keepAlive() {\n    setInterval(() => {\n      if (this.isConnected) {\n        this.ws.send(JSON.stringify({\n          name: \"ping\"\n        }));\n      }\n    }, 10000);\n  }\n  reconnect() {\n    console.log(\"🔄 Reconnecting to IQ Option WebSocket...\");\n    this.connect();\n  }\n}\nexport default IQOptionAPI;","map":{"version":3,"names":["IQOptionAPI","constructor","token","ws","isConnected","candles","connect","Promise","resolve","reject","WebSocket","onopen","console","log","authenticate","keepAlive","checkMarketStatus","onmessage","message","data","JSON","parse","name","msg","onerror","error","onclose","setTimeout","reconnect","authData","send","stringify","subscribeCandles","asset","interval","subscribeData","version","params","routingFilters","active_id","size","only_closed","marketStatusData","type","instrument_type","length","warn","getCandles","setInterval"],"sources":["C:/Users/wator/Documents/Ananto/trade/frontend/src/services/IQOptionAPI.js"],"sourcesContent":["class IQOptionAPI {\r\n    constructor(token) {\r\n      this.token = token;\r\n      this.ws = null;\r\n      this.isConnected = false;\r\n      this.candles = [];\r\n    }\r\n  \r\n    connect() {\r\n      return new Promise((resolve, reject) => {\r\n        this.ws = new WebSocket(\"wss://iqoption.com/echo/websocket\");\r\n  \r\n        this.ws.onopen = () => {\r\n          console.log(\"✅ Connected to IQ Option WebSocket\");\r\n          this.isConnected = true;\r\n          this.authenticate();\r\n          this.keepAlive();\r\n          this.checkMarketStatus(); // ✅ ตรวจสอบว่าตลาดเปิดหรือปิด\r\n          resolve();\r\n        };\r\n  \r\n        this.ws.onmessage = (message) => {\r\n          const data = JSON.parse(message.data);\r\n          if (data.name === \"candles\") {\r\n            this.candles = data.msg.candles;\r\n          }\r\n        };\r\n  \r\n        this.ws.onerror = (error) => {\r\n          console.error(\"❌ WebSocket Error:\", error);\r\n          reject(error);\r\n        };\r\n  \r\n        this.ws.onclose = () => {\r\n          console.log(\"🔌 Disconnected from IQ Option WebSocket\");\r\n          this.isConnected = false;\r\n          setTimeout(() => this.reconnect(), 5000);\r\n        };\r\n      });\r\n    }\r\n  \r\n    authenticate() {\r\n      const authData = {\r\n        name: \"authenticate\",\r\n        msg: { token: this.token }\r\n      };\r\n      this.ws.send(JSON.stringify(authData));\r\n    }\r\n  \r\n    subscribeCandles(asset, interval) {\r\n      const subscribeData = {\r\n        name: \"subscribeMessage\",\r\n        msg: {\r\n          name: \"candles\",\r\n          version: \"1.0\",\r\n          params: {\r\n            routingFilters: { active_id: asset, size: interval, only_closed: false }\r\n          }\r\n        }\r\n      };\r\n      this.ws.send(JSON.stringify(subscribeData));\r\n    }\r\n  \r\n    checkMarketStatus() {\r\n      const marketStatusData = {\r\n        name: \"get-instruments\",\r\n        msg: {\r\n          type: \"forex\",\r\n          instrument_type: \"currency\"\r\n        }\r\n      };\r\n      this.ws.send(JSON.stringify(marketStatusData));\r\n  \r\n      this.ws.onmessage = (message) => {\r\n        const data = JSON.parse(message.data);\r\n        if (data.name === \"get-instruments\") {\r\n          console.log(\"📢 Market Status:\", data.msg);\r\n          if (data.msg.length === 0) {\r\n            console.warn(\"⚠️ ตลาดปิดอยู่ในขณะนี้!\");\r\n          }\r\n        }\r\n      };\r\n    }\r\n  \r\n    getCandles() {\r\n      return this.candles;\r\n    }\r\n  \r\n    keepAlive() {\r\n      setInterval(() => {\r\n        if (this.isConnected) {\r\n          this.ws.send(JSON.stringify({ name: \"ping\" }));\r\n        }\r\n      }, 10000);\r\n    }\r\n  \r\n    reconnect() {\r\n      console.log(\"🔄 Reconnecting to IQ Option WebSocket...\");\r\n      this.connect();\r\n    }\r\n  }\r\n  \r\n  export default IQOptionAPI;\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}