{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wator\\\\Documents\\\\Ananto\\\\trade\\\\frontend\\\\src\\\\components\\\\TradingChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, TimeScale, Title, Tooltip, Legend } from \"chart.js\";\nimport \"chartjs-adapter-date-fns\";\nimport { Chart } from \"react-chartjs-2\";\nimport { CandlestickController, CandlestickElement } from \"chartjs-chart-financial\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, TimeScale, CandlestickController, CandlestickElement, Title, Tooltip, Legend);\nconst TradingChart = () => {\n  _s();\n  const [candles, setCandles] = useState([]);\n  const [signals, setSignals] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const API_KEY = \" 64YVF12HD0IW3JXD\"; // 🔥 ใส่ API Key ที่สมัครจาก Twelve Data หรือ Alpha Vantage\n        const res = await fetch(`https://api.twelvedata.com/time_series?symbol=GBP/USD&interval=1min&apikey=${API_KEY}`);\n        const data = await res.json();\n        if (!data || !data.values) {\n          console.error(\"❌ No data received from API.\");\n          return;\n        }\n\n        // ✅ แปลงข้อมูลจาก API ให้ตรงกับ Chart.js\n        const candlesData = data.values.slice(0, 20).map(entry => ({\n          x: new Date(entry.datetime),\n          // ✅ ใช้ `datetime` จาก API\n          o: parseFloat(entry.open),\n          // Open\n          h: parseFloat(entry.high),\n          // High\n          l: parseFloat(entry.low),\n          // Low\n          c: parseFloat(entry.close) // Close\n        })).reverse(); // ✅ เรียงจากเก่ามาใหม่\n\n        // ✅ คำนวณ SMA + AI Signal\n        const period = 5;\n        const smaData = candlesData.map((candle, index) => {\n          if (index >= period) {\n            const avg = candlesData.slice(index - period, index).reduce((sum, c) => sum + c.c, 0) / period;\n            return {\n              x: candle.x,\n              sma: avg\n            };\n          }\n          return {\n            x: candle.x,\n            sma: candle.c\n          };\n        });\n        const signalData = candlesData.map((candle, index) => {\n          if (index > period) {\n            const sma = smaData[index].sma;\n            const prevClose = candlesData[index - 1].c;\n            if (candle.c > sma && candle.c > prevClose) {\n              return {\n                x: candle.x,\n                y: candle.l - 0.0003,\n                type: \"BUY\"\n              };\n            } else if (candle.c < sma && candle.c < prevClose) {\n              return {\n                x: candle.x,\n                y: candle.h + 0.0003,\n                type: \"SELL\"\n              };\n            }\n          }\n          return null;\n        }).filter(s => s !== null);\n        console.log(\"✅ Updated Candle Data:\", candlesData);\n        console.log(\"✅ AI Signals:\", signalData);\n        setCandles(candlesData);\n        setSignals(signalData);\n      } catch (error) {\n        console.error(\"❌ Error fetching data:\", error);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#000\",\n      padding: \"10px\",\n      color: \"#0f0\",\n      textAlign: \"center\",\n      width: \"390px\",\n      height: \"320px\",\n      border: \"3px solid #0f0\",\n      borderRadius: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        fontSize: \"20px\",\n        color: \"#0f0\",\n        margin: \"5px 0\"\n      },\n      children: \"\\uD83D\\uDCCA GBP/USD (AI Trading)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"candlestick\",\n      data: {\n        datasets: [{\n          label: \"GBP/USD Price\",\n          data: candles,\n          borderColor: \"#fff\",\n          borderWidth: 1,\n          color: {\n            up: \"green\",\n            down: \"red\",\n            unchanged: \"gray\"\n          },\n          parsing: false\n        }, {\n          label: \"Signals\",\n          data: signals.map(signal => ({\n            x: signal.x,\n            y: signal.y\n          })),\n          pointStyle: \"triangle\",\n          pointRadius: 8,\n          backgroundColor: signals.map(signal => signal.type === \"BUY\" ? \"green\" : \"red\")\n        }]\n      },\n      options: {\n        responsive: false,\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            type: \"time\",\n            time: {\n              unit: \"minute\",\n              tooltipFormat: \"HH:mm\"\n            },\n            ticks: {\n              color: \"#fff\",\n              font: {\n                size: 12\n              }\n            }\n          },\n          y: {\n            ticks: {\n              color: \"#fff\",\n              font: {\n                size: 12\n              }\n            },\n            min: Math.min(...candles.map(c => c.l)) - 0.001,\n            max: Math.max(...candles.map(c => c.h)) + 0.001\n          }\n        },\n        plugins: {\n          legend: {\n            display: false\n          }\n        }\n      },\n      width: 390,\n      height: 280\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(TradingChart, \"OvfjtsgH82QBILNDiDIOBwEHZ/g=\");\n_c = TradingChart;\nexport default TradingChart;\nvar _c;\n$RefreshReg$(_c, \"TradingChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","TimeScale","Title","Tooltip","Legend","CandlestickController","CandlestickElement","jsxDEV","_jsxDEV","register","TradingChart","_s","candles","setCandles","signals","setSignals","fetchData","API_KEY","res","fetch","data","json","values","console","error","candlesData","slice","map","entry","x","Date","datetime","o","parseFloat","open","h","high","l","low","c","close","reverse","period","smaData","candle","index","avg","reduce","sum","sma","signalData","prevClose","y","type","filter","s","log","interval","setInterval","clearInterval","style","backgroundColor","padding","color","textAlign","width","height","border","borderRadius","children","fontSize","margin","fileName","_jsxFileName","lineNumber","columnNumber","datasets","label","borderColor","borderWidth","up","down","unchanged","parsing","signal","pointStyle","pointRadius","options","responsive","maintainAspectRatio","scales","time","unit","tooltipFormat","ticks","font","size","min","Math","max","plugins","legend","display","_c","$RefreshReg$"],"sources":["C:/Users/wator/Documents/Ananto/trade/frontend/src/components/TradingChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  TimeScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from \"chart.js\";\r\nimport \"chartjs-adapter-date-fns\";\r\nimport { Chart } from \"react-chartjs-2\";\r\nimport { CandlestickController, CandlestickElement } from \"chartjs-chart-financial\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, TimeScale, CandlestickController, CandlestickElement, Title, Tooltip, Legend);\r\n\r\nconst TradingChart = () => {\r\n  const [candles, setCandles] = useState([]);\r\n  const [signals, setSignals] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const API_KEY = \" 64YVF12HD0IW3JXD\"; // 🔥 ใส่ API Key ที่สมัครจาก Twelve Data หรือ Alpha Vantage\r\n        const res = await fetch(`https://api.twelvedata.com/time_series?symbol=GBP/USD&interval=1min&apikey=${API_KEY}`);\r\n        const data = await res.json();\r\n\r\n        if (!data || !data.values) {\r\n          console.error(\"❌ No data received from API.\");\r\n          return;\r\n        }\r\n\r\n        // ✅ แปลงข้อมูลจาก API ให้ตรงกับ Chart.js\r\n        const candlesData = data.values.slice(0, 20).map(entry => ({\r\n          x: new Date(entry.datetime), // ✅ ใช้ `datetime` จาก API\r\n          o: parseFloat(entry.open), // Open\r\n          h: parseFloat(entry.high), // High\r\n          l: parseFloat(entry.low), // Low\r\n          c: parseFloat(entry.close), // Close\r\n        })).reverse(); // ✅ เรียงจากเก่ามาใหม่\r\n\r\n        // ✅ คำนวณ SMA + AI Signal\r\n        const period = 5;\r\n        const smaData = candlesData.map((candle, index) => {\r\n          if (index >= period) {\r\n            const avg = candlesData.slice(index - period, index)\r\n              .reduce((sum, c) => sum + c.c, 0) / period;\r\n            return { x: candle.x, sma: avg };\r\n          }\r\n          return { x: candle.x, sma: candle.c };\r\n        });\r\n\r\n        const signalData = candlesData.map((candle, index) => {\r\n          if (index > period) {\r\n            const sma = smaData[index].sma;\r\n            const prevClose = candlesData[index - 1].c;\r\n            \r\n            if (candle.c > sma && candle.c > prevClose) {\r\n              return { x: candle.x, y: candle.l - 0.0003, type: \"BUY\" };\r\n            } else if (candle.c < sma && candle.c < prevClose) {\r\n              return { x: candle.x, y: candle.h + 0.0003, type: \"SELL\" };\r\n            }\r\n          }\r\n          return null;\r\n        }).filter(s => s !== null);\r\n\r\n        console.log(\"✅ Updated Candle Data:\", candlesData);\r\n        console.log(\"✅ AI Signals:\", signalData);\r\n\r\n        setCandles(candlesData);\r\n        setSignals(signalData);\r\n      } catch (error) {\r\n        console.error(\"❌ Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{\r\n      backgroundColor: \"#000\",\r\n      padding: \"10px\",\r\n      color: \"#0f0\",\r\n      textAlign: \"center\",\r\n      width: \"390px\",\r\n      height: \"320px\",\r\n      border: \"3px solid #0f0\",\r\n      borderRadius: \"10px\",\r\n    }}>\r\n      <h3 style={{ fontSize: \"20px\", color: \"#0f0\", margin: \"5px 0\" }}>📊 GBP/USD (AI Trading)</h3>\r\n      <Chart\r\n        type=\"candlestick\"\r\n        data={{\r\n          datasets: [\r\n            {\r\n              label: \"GBP/USD Price\",\r\n              data: candles,\r\n              borderColor: \"#fff\",\r\n              borderWidth: 1,\r\n              color: {\r\n                up: \"green\",\r\n                down: \"red\",\r\n                unchanged: \"gray\",\r\n              },\r\n              parsing: false,\r\n            },\r\n            {\r\n              label: \"Signals\",\r\n              data: signals.map(signal => ({\r\n                x: signal.x,\r\n                y: signal.y,\r\n              })),\r\n              pointStyle: \"triangle\",\r\n              pointRadius: 8,\r\n              backgroundColor: signals.map(signal => (signal.type === \"BUY\" ? \"green\" : \"red\")),\r\n            }\r\n          ],\r\n        }}\r\n        options={{\r\n          responsive: false,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            x: {\r\n              type: \"time\",\r\n              time: {\r\n                unit: \"minute\",\r\n                tooltipFormat: \"HH:mm\",\r\n              },\r\n              ticks: { color: \"#fff\", font: { size: 12 } },\r\n            },\r\n            y: {\r\n              ticks: { color: \"#fff\", font: { size: 12 } },\r\n              min: Math.min(...candles.map(c => c.l)) - 0.001,\r\n              max: Math.max(...candles.map(c => c.h)) + 0.001,\r\n            }\r\n          },\r\n          plugins: {\r\n            legend: { display: false },\r\n          }\r\n        }}\r\n        width={390}\r\n        height={280}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TradingChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}