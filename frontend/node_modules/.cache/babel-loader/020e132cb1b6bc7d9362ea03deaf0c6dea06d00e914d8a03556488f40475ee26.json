{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wator\\\\Documents\\\\Ananto\\\\trade\\\\frontend\\\\src\\\\components\\\\TradingChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, TimeScale, Title, Tooltip, Legend } from \"chart.js\";\nimport \"chartjs-adapter-date-fns\";\nimport { Chart } from \"react-chartjs-2\";\nimport { CandlestickController, CandlestickElement } from \"chartjs-chart-financial\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, TimeScale, CandlestickController, CandlestickElement, Title, Tooltip, Legend);\nconst TradingChart = () => {\n  _s();\n  const [candles, setCandles] = useState([]);\n  const [signals, setSignals] = useState([]); // ✅ เพิ่มสัญญาณ BUY/SELL\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // ✅ ดึงข้อมูลแท่งเทียน 1 นาทีจาก Binance\n        const res = await fetch(\"https://api.binance.com/api/v3/klines?symbol=GBPUSDT&interval=1m&limit=20\");\n        const data = await res.json();\n        const candlesData = data.map(entry => ({\n          x: new Date(entry[0]),\n          o: parseFloat(entry[1]),\n          h: parseFloat(entry[2]),\n          l: parseFloat(entry[3]),\n          c: parseFloat(entry[4])\n        }));\n        setCandles(candlesData);\n\n        // ✅ สร้างสัญญาณสุ่ม BUY/SELL (สามารถเชื่อม AI ได้)\n        const signalData = candlesData.map(candle => ({\n          x: candle.x,\n          y: candle.c,\n          type: Math.random() > 0.5 ? \"BUY\" : \"SELL\"\n        }));\n        setSignals(signalData);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 60000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#000\",\n      padding: \"10px\",\n      color: \"#0f0\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"GBP/USD 1-Min Candlestick Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"candlestick\",\n      data: {\n        datasets: [{\n          label: \"GBP/USD Price\",\n          data: candles,\n          borderColor: \"#fff\",\n          borderWidth: 1,\n          color: {\n            up: \"#0f0\",\n            // ✅ สีเขียวแท่งขึ้น\n            down: \"#f00\",\n            // ✅ สีแดงแท่งลง\n            unchanged: \"#999\"\n          }\n        }, {\n          label: \"Signals\",\n          data: signals.map(signal => ({\n            x: signal.x,\n            y: signal.type === \"BUY\" ? signal.y - 0.0005 : signal.y + 0.0005\n          })),\n          pointStyle: \"triangle\",\n          pointRadius: 10,\n          backgroundColor: signals.map(signal => signal.type === \"BUY\" ? \"green\" : \"red\")\n        }]\n      },\n      options: {\n        scales: {\n          x: {\n            type: \"time\",\n            time: {\n              unit: \"minute\"\n            },\n            ticks: {\n              color: \"#fff\"\n            }\n          },\n          y: {\n            ticks: {\n              color: \"#fff\"\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            labels: {\n              color: \"#fff\"\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(TradingChart, \"OvfjtsgH82QBILNDiDIOBwEHZ/g=\");\n_c = TradingChart;\nexport default TradingChart;\nvar _c;\n$RefreshReg$(_c, \"TradingChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","TimeScale","Title","Tooltip","Legend","CandlestickController","CandlestickElement","jsxDEV","_jsxDEV","register","TradingChart","_s","candles","setCandles","signals","setSignals","fetchData","res","fetch","data","json","candlesData","map","entry","x","Date","o","parseFloat","h","l","c","signalData","candle","y","type","Math","random","error","console","interval","setInterval","clearInterval","style","backgroundColor","padding","color","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","datasets","label","borderColor","borderWidth","up","down","unchanged","signal","pointStyle","pointRadius","options","scales","time","unit","ticks","plugins","legend","labels","_c","$RefreshReg$"],"sources":["C:/Users/wator/Documents/Ananto/trade/frontend/src/components/TradingChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  TimeScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from \"chart.js\";\r\nimport \"chartjs-adapter-date-fns\"; \r\nimport { Chart } from \"react-chartjs-2\";\r\nimport { CandlestickController, CandlestickElement } from \"chartjs-chart-financial\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, TimeScale, CandlestickController, CandlestickElement, Title, Tooltip, Legend);\r\n\r\nconst TradingChart = () => {\r\n  const [candles, setCandles] = useState([]);\r\n  const [signals, setSignals] = useState([]); // ✅ เพิ่มสัญญาณ BUY/SELL\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // ✅ ดึงข้อมูลแท่งเทียน 1 นาทีจาก Binance\r\n        const res = await fetch(\"https://api.binance.com/api/v3/klines?symbol=GBPUSDT&interval=1m&limit=20\");\r\n        const data = await res.json();\r\n\r\n        const candlesData = data.map(entry => ({\r\n          x: new Date(entry[0]),\r\n          o: parseFloat(entry[1]),\r\n          h: parseFloat(entry[2]),\r\n          l: parseFloat(entry[3]),\r\n          c: parseFloat(entry[4]),\r\n        }));\r\n\r\n        setCandles(candlesData);\r\n\r\n        // ✅ สร้างสัญญาณสุ่ม BUY/SELL (สามารถเชื่อม AI ได้)\r\n        const signalData = candlesData.map(candle => ({\r\n          x: candle.x,\r\n          y: candle.c,\r\n          type: Math.random() > 0.5 ? \"BUY\" : \"SELL\"\r\n        }));\r\n        setSignals(signalData);\r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 60000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#000\", padding: \"10px\", color: \"#0f0\", textAlign: \"center\" }}>\r\n      <h2>GBP/USD 1-Min Candlestick Chart</h2>\r\n      <Chart\r\n        type=\"candlestick\"\r\n        data={{\r\n          datasets: [\r\n            {\r\n              label: \"GBP/USD Price\",\r\n              data: candles,\r\n              borderColor: \"#fff\",\r\n              borderWidth: 1,\r\n              color: {\r\n                up: \"#0f0\", // ✅ สีเขียวแท่งขึ้น\r\n                down: \"#f00\", // ✅ สีแดงแท่งลง\r\n                unchanged: \"#999\"\r\n              }\r\n            },\r\n            {\r\n              label: \"Signals\",\r\n              data: signals.map(signal => ({\r\n                x: signal.x,\r\n                y: signal.type === \"BUY\" ? signal.y - 0.0005 : signal.y + 0.0005\r\n              })),\r\n              pointStyle: \"triangle\",\r\n              pointRadius: 10,\r\n              backgroundColor: signals.map(signal => (signal.type === \"BUY\" ? \"green\" : \"red\")),\r\n            }\r\n          ],\r\n        }}\r\n        options={{\r\n          scales: {\r\n            x: {\r\n              type: \"time\",\r\n              time: {\r\n                unit: \"minute\",\r\n              },\r\n              ticks: { color: \"#fff\" },\r\n            },\r\n            y: {\r\n              ticks: { color: \"#fff\" },\r\n            }\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              labels: { color: \"#fff\" }\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TradingChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}