{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wator\\\\Documents\\\\Ananto\\\\trade\\\\frontend\\\\src\\\\components\\\\TradingChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, TimeScale, Title, Tooltip, Legend } from \"chart.js\";\nimport \"chartjs-adapter-date-fns\";\nimport { Chart } from \"react-chartjs-2\";\nimport { CandlestickController, CandlestickElement } from \"chartjs-chart-financial\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, TimeScale, CandlestickController, CandlestickElement, Title, Tooltip, Legend);\nconst TradingChart = () => {\n  _s();\n  const [candles, setCandles] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(\"https://api.binance.com/api/v3/klines?symbol=GBPUSDT&interval=1m&limit=20\");\n        const data = await res.json();\n        if (!data || data.length === 0) {\n          console.error(\"❌ No data received from API.\");\n          return;\n        }\n        const candlesData = data.map(entry => ({\n          x: new Date(parseInt(entry[0])),\n          // ✅ ใช้ `x` สำหรับ Chart.js\n          o: parseFloat(entry[1]),\n          // Open\n          h: parseFloat(entry[2]),\n          // High\n          l: parseFloat(entry[3]),\n          // Low\n          c: parseFloat(entry[4]) // Close\n        }));\n        console.log(\"✅ Updated Candle Data:\", candlesData);\n        setCandles(candlesData);\n      } catch (error) {\n        console.error(\"❌ Error fetching data:\", error);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 5000); // ✅ อัปเดตข้อมูลทุก 5 วินาที (แทน 1 นาที)\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#000\",\n      padding: \"10px\",\n      color: \"#0f0\",\n      textAlign: \"center\",\n      width: \"300px\",\n      height: \"250px\",\n      border: \"2px solid #0f0\",\n      borderRadius: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        fontSize: \"16px\",\n        margin: \"5px 0\"\n      },\n      children: \"\\uD83D\\uDCCA GBP/USD (Real-time)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"candlestick\",\n      data: {\n        datasets: [{\n          label: \"GBP/USD Price\",\n          data: candles,\n          borderColor: \"#fff\",\n          borderWidth: 1,\n          color: {\n            up: \"green\",\n            down: \"red\",\n            unchanged: \"gray\"\n          },\n          parsing: false\n        }]\n      },\n      options: {\n        responsive: false,\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            type: \"time\",\n            time: {\n              unit: \"minute\",\n              tooltipFormat: \"HH:mm\"\n            },\n            ticks: {\n              color: \"#fff\",\n              font: {\n                size: 10\n              }\n            }\n          },\n          y: {\n            ticks: {\n              color: \"#fff\",\n              font: {\n                size: 10\n              }\n            },\n            min: Math.min(...candles.map(c => c.l)) - 0.001,\n            // ✅ ปรับขอบล่างของกราฟ\n            max: Math.max(...candles.map(c => c.h)) + 0.001 // ✅ ปรับขอบบนของกราฟ\n          }\n        },\n        plugins: {\n          legend: {\n            display: false\n          }\n        }\n      },\n      width: 300,\n      height: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(TradingChart, \"TF9lc5Mu+ZlB8TX+wxZGjKbTMJI=\");\n_c = TradingChart;\nexport default TradingChart;\nvar _c;\n$RefreshReg$(_c, \"TradingChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","TimeScale","Title","Tooltip","Legend","CandlestickController","CandlestickElement","jsxDEV","_jsxDEV","register","TradingChart","_s","candles","setCandles","fetchData","res","fetch","data","json","length","console","error","candlesData","map","entry","x","Date","parseInt","o","parseFloat","h","l","c","log","interval","setInterval","clearInterval","style","backgroundColor","padding","color","textAlign","width","height","border","borderRadius","children","fontSize","margin","fileName","_jsxFileName","lineNumber","columnNumber","type","datasets","label","borderColor","borderWidth","up","down","unchanged","parsing","options","responsive","maintainAspectRatio","scales","time","unit","tooltipFormat","ticks","font","size","y","min","Math","max","plugins","legend","display","_c","$RefreshReg$"],"sources":["C:/Users/wator/Documents/Ananto/trade/frontend/src/components/TradingChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  TimeScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from \"chart.js\";\r\nimport \"chartjs-adapter-date-fns\";\r\nimport { Chart } from \"react-chartjs-2\";\r\nimport { CandlestickController, CandlestickElement } from \"chartjs-chart-financial\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, TimeScale, CandlestickController, CandlestickElement, Title, Tooltip, Legend);\r\n\r\nconst TradingChart = () => {\r\n  const [candles, setCandles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await fetch(\"https://api.binance.com/api/v3/klines?symbol=GBPUSDT&interval=1m&limit=20\");\r\n        const data = await res.json();\r\n\r\n        if (!data || data.length === 0) {\r\n          console.error(\"❌ No data received from API.\");\r\n          return;\r\n        }\r\n\r\n        const candlesData = data.map(entry => ({\r\n          x: new Date(parseInt(entry[0])), // ✅ ใช้ `x` สำหรับ Chart.js\r\n          o: parseFloat(entry[1]), // Open\r\n          h: parseFloat(entry[2]), // High\r\n          l: parseFloat(entry[3]), // Low\r\n          c: parseFloat(entry[4]), // Close\r\n        }));\r\n\r\n        console.log(\"✅ Updated Candle Data:\", candlesData);\r\n        setCandles(candlesData);\r\n      } catch (error) {\r\n        console.error(\"❌ Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 5000); // ✅ อัปเดตข้อมูลทุก 5 วินาที (แทน 1 นาที)\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{\r\n      backgroundColor: \"#000\",\r\n      padding: \"10px\",\r\n      color: \"#0f0\",\r\n      textAlign: \"center\",\r\n      width: \"300px\",\r\n      height: \"250px\",\r\n      border: \"2px solid #0f0\",\r\n      borderRadius: \"10px\",\r\n    }}>\r\n      <h3 style={{ fontSize: \"16px\", margin: \"5px 0\" }}>📊 GBP/USD (Real-time)</h3>\r\n      <Chart\r\n        type=\"candlestick\"\r\n        data={{\r\n          datasets: [\r\n            {\r\n              label: \"GBP/USD Price\",\r\n              data: candles,\r\n              borderColor: \"#fff\",\r\n              borderWidth: 1,\r\n              color: {\r\n                up: \"green\",\r\n                down: \"red\",\r\n                unchanged: \"gray\",\r\n              },\r\n              parsing: false,\r\n            }\r\n          ],\r\n        }}\r\n        options={{\r\n          responsive: false,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            x: {\r\n              type: \"time\",\r\n              time: {\r\n                unit: \"minute\",\r\n                tooltipFormat: \"HH:mm\",\r\n              },\r\n              ticks: { color: \"#fff\", font: { size: 10 } },\r\n            },\r\n            y: {\r\n              ticks: { color: \"#fff\", font: { size: 10 } },\r\n              min: Math.min(...candles.map(c => c.l)) - 0.001, // ✅ ปรับขอบล่างของกราฟ\r\n              max: Math.max(...candles.map(c => c.h)) + 0.001, // ✅ ปรับขอบบนของกราฟ\r\n            }\r\n          },\r\n          plugins: {\r\n            legend: { display: false },\r\n          }\r\n        }}\r\n        width={300}\r\n        height={200}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TradingChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}