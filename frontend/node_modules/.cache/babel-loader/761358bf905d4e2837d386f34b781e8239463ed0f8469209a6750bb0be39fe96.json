{"ast":null,"code":"const WebSocket = require(\"ws\");\nclass IQOptionAPI {\n  constructor(token) {\n    this.token = token;\n    this.ws = null;\n    this.isConnected = false;\n    this.candles = [];\n  }\n  connect() {\n    return new Promise((resolve, reject) => {\n      this.ws = new WebSocket(\"wss://iqoption.com/echo/websocket\");\n      this.ws.on(\"open\", () => {\n        console.log(\"✅ Connected to IQ Option WebSocket\");\n        this.isConnected = true;\n        this.authenticate();\n        resolve();\n      });\n      this.ws.on(\"message\", message => {\n        const data = JSON.parse(message);\n        if (data.name === \"candles\") {\n          this.candles = data.msg.candles;\n        }\n      });\n      this.ws.on(\"error\", error => {\n        console.error(\"❌ WebSocket Error:\", error);\n        reject(error);\n      });\n      this.ws.on(\"close\", () => {\n        console.log(\"🔌 Disconnected from IQ Option WebSocket\");\n        this.isConnected = false;\n      });\n    });\n  }\n  authenticate() {\n    const authData = {\n      name: \"authenticate\",\n      msg: {\n        token: this.token\n      }\n    };\n    this.ws.send(JSON.stringify(authData));\n  }\n  subscribeCandles(asset, interval) {\n    const subscribeData = {\n      name: \"subscribeMessage\",\n      msg: {\n        name: \"candles\",\n        version: \"1.0\",\n        params: {\n          routingFilters: {\n            active_id: asset,\n            size: interval,\n            only_closed: false\n          }\n        }\n      }\n    };\n    this.ws.send(JSON.stringify(subscribeData));\n  }\n  getCandles() {\n    return this.candles;\n  }\n}\nmodule.exports = IQOptionAPI;","map":{"version":3,"names":["WebSocket","require","IQOptionAPI","constructor","token","ws","isConnected","candles","connect","Promise","resolve","reject","on","console","log","authenticate","message","data","JSON","parse","name","msg","error","authData","send","stringify","subscribeCandles","asset","interval","subscribeData","version","params","routingFilters","active_id","size","only_closed","getCandles","module","exports"],"sources":["C:/Users/wator/Documents/Ananto/trade/frontend/src/services/IQOptionAPI.js"],"sourcesContent":["const WebSocket = require(\"ws\");\r\n\r\nclass IQOptionAPI {\r\n  constructor(token) {\r\n    this.token = token;\r\n    this.ws = null;\r\n    this.isConnected = false;\r\n    this.candles = [];\r\n  }\r\n\r\n  connect() {\r\n    return new Promise((resolve, reject) => {\r\n      this.ws = new WebSocket(\"wss://iqoption.com/echo/websocket\");\r\n\r\n      this.ws.on(\"open\", () => {\r\n        console.log(\"✅ Connected to IQ Option WebSocket\");\r\n        this.isConnected = true;\r\n        this.authenticate();\r\n        resolve();\r\n      });\r\n\r\n      this.ws.on(\"message\", (message) => {\r\n        const data = JSON.parse(message);\r\n        if (data.name === \"candles\") {\r\n          this.candles = data.msg.candles;\r\n        }\r\n      });\r\n\r\n      this.ws.on(\"error\", (error) => {\r\n        console.error(\"❌ WebSocket Error:\", error);\r\n        reject(error);\r\n      });\r\n\r\n      this.ws.on(\"close\", () => {\r\n        console.log(\"🔌 Disconnected from IQ Option WebSocket\");\r\n        this.isConnected = false;\r\n      });\r\n    });\r\n  }\r\n\r\n  authenticate() {\r\n    const authData = {\r\n      name: \"authenticate\",\r\n      msg: { token: this.token }\r\n    };\r\n    this.ws.send(JSON.stringify(authData));\r\n  }\r\n\r\n  subscribeCandles(asset, interval) {\r\n    const subscribeData = {\r\n      name: \"subscribeMessage\",\r\n      msg: {\r\n        name: \"candles\",\r\n        version: \"1.0\",\r\n        params: {\r\n          routingFilters: { active_id: asset, size: interval, only_closed: false }\r\n        }\r\n      }\r\n    };\r\n    this.ws.send(JSON.stringify(subscribeData));\r\n  }\r\n\r\n  getCandles() {\r\n    return this.candles;\r\n  }\r\n}\r\n\r\nmodule.exports = IQOptionAPI;\r\n"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,IAAI,CAAC;AAE/B,MAAMC,WAAW,CAAC;EAChBC,WAAWA,CAACC,KAAK,EAAE;IACjB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,EAAE,GAAG,IAAI;IACd,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,OAAO,GAAG,EAAE;EACnB;EAEAC,OAAOA,CAAA,EAAG;IACR,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,IAAI,CAACN,EAAE,GAAG,IAAIL,SAAS,CAAC,mCAAmC,CAAC;MAE5D,IAAI,CAACK,EAAE,CAACO,EAAE,CAAC,MAAM,EAAE,MAAM;QACvBC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;QACjD,IAAI,CAACR,WAAW,GAAG,IAAI;QACvB,IAAI,CAACS,YAAY,CAAC,CAAC;QACnBL,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;MAEF,IAAI,CAACL,EAAE,CAACO,EAAE,CAAC,SAAS,EAAGI,OAAO,IAAK;QACjC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC;QAChC,IAAIC,IAAI,CAACG,IAAI,KAAK,SAAS,EAAE;UAC3B,IAAI,CAACb,OAAO,GAAGU,IAAI,CAACI,GAAG,CAACd,OAAO;QACjC;MACF,CAAC,CAAC;MAEF,IAAI,CAACF,EAAE,CAACO,EAAE,CAAC,OAAO,EAAGU,KAAK,IAAK;QAC7BT,OAAO,CAACS,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1CX,MAAM,CAACW,KAAK,CAAC;MACf,CAAC,CAAC;MAEF,IAAI,CAACjB,EAAE,CAACO,EAAE,CAAC,OAAO,EAAE,MAAM;QACxBC,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;QACvD,IAAI,CAACR,WAAW,GAAG,KAAK;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAS,YAAYA,CAAA,EAAG;IACb,MAAMQ,QAAQ,GAAG;MACfH,IAAI,EAAE,cAAc;MACpBC,GAAG,EAAE;QAAEjB,KAAK,EAAE,IAAI,CAACA;MAAM;IAC3B,CAAC;IACD,IAAI,CAACC,EAAE,CAACmB,IAAI,CAACN,IAAI,CAACO,SAAS,CAACF,QAAQ,CAAC,CAAC;EACxC;EAEAG,gBAAgBA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAChC,MAAMC,aAAa,GAAG;MACpBT,IAAI,EAAE,kBAAkB;MACxBC,GAAG,EAAE;QACHD,IAAI,EAAE,SAAS;QACfU,OAAO,EAAE,KAAK;QACdC,MAAM,EAAE;UACNC,cAAc,EAAE;YAAEC,SAAS,EAAEN,KAAK;YAAEO,IAAI,EAAEN,QAAQ;YAAEO,WAAW,EAAE;UAAM;QACzE;MACF;IACF,CAAC;IACD,IAAI,CAAC9B,EAAE,CAACmB,IAAI,CAACN,IAAI,CAACO,SAAS,CAACI,aAAa,CAAC,CAAC;EAC7C;EAEAO,UAAUA,CAAA,EAAG;IACX,OAAO,IAAI,CAAC7B,OAAO;EACrB;AACF;AAEA8B,MAAM,CAACC,OAAO,GAAGpC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}